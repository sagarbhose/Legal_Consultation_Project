{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass IpcService {\n  constructor(http) {\n    this.http = http;\n    this.userloggedin = false;\n    this.Lawyerloggedin = false;\n  }\n  getUser() {\n    return this.user;\n  }\n  getUserLoggedIn() {\n    return this.userloggedin;\n  }\n  setUserLoggedIn() {\n    this.userloggedin = true;\n  }\n  getLawyerloggedin() {\n    return this.Lawyerloggedin;\n  }\n  setLawyerloggedin() {\n    this.Lawyerloggedin = true;\n  }\n  getOtp() {\n    return this.Otp;\n  }\n  setOtp(Otp) {\n    this.Otp = Otp;\n  }\n  getterIpc() {\n    return this.Ipc;\n  }\n  setterIpc(obj) {\n    this.Ipc = obj;\n  }\n  getipc() {\n    return this.http.get(\"app/ipclist\");\n  }\n  getIpcById(ipc) {\n    return this.http.get(\"app/ipclist/\" + ipc);\n  }\n  SendNGetOtp(emailid) {\n    return this.http.get(\"app/forgotpassword/\" + emailid);\n  }\n  insertUser(User) {\n    return this.http.post(\"/app/clientlist\", User);\n  }\n  getCredclient(cred) {\n    return this.http.get(\"app/clientbycred/\" + cred);\n  }\n  getCredLawyer(cred) {\n    return this.http.get(\"app/lawyerbycred/\" + cred);\n  }\n  getCities() {\n    return this.http.get(\"https://api.openaq.org/v1/cities?country_id=IN\");\n  }\n  insertQuestion(Question) {\n    return this.http.post(\"/app/Questionslist\", Question);\n  }\n  insertAnswer(Answer) {\n    return this.http.post(\"/app/Answerlist\", Answer);\n  }\n}\nIpcService.ɵfac = function IpcService_Factory(t) {\n  return new (t || IpcService)(i0.ɵɵinject(i1.HttpClient));\n};\nIpcService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: IpcService,\n  factory: IpcService.ɵfac,\n  providedIn: 'root'\n});\nexport { IpcService };","map":{"version":3,"names":["IpcService","constructor","http","userloggedin","Lawyerloggedin","getUser","user","getUserLoggedIn","setUserLoggedIn","getLawyerloggedin","setLawyerloggedin","getOtp","Otp","setOtp","getterIpc","Ipc","setterIpc","obj","getipc","get","getIpcById","ipc","SendNGetOtp","emailid","insertUser","User","post","getCredclient","cred","getCredLawyer","getCities","insertQuestion","Question","insertAnswer","Answer","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\SAGAR\\VSCodes\\Legal_Consulation_Angular\\Legal_Consulation_Angular\\src\\app\\ipc.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IpcService {\n  Ipc:any\n  Otp:any\n  userloggedin:boolean=false\n  Lawyerloggedin:boolean=false\n  constructor(private http: HttpClient) {}\n  user:any;\n\n  getUser(){\n    return this.user;\n  }\n\n  getUserLoggedIn(){\n    return this.userloggedin;\n  }\n  setUserLoggedIn(){\n    this.userloggedin=true;\n  }\n\n  getLawyerloggedin(){\n    return this.Lawyerloggedin;\n  }\n\n  setLawyerloggedin(){\n    this.Lawyerloggedin=true;\n  }\n\n  getOtp(){\n    return this.Otp\n  }\n\n  setOtp(Otp:any){\n    this.Otp=Otp\n  }\n\n  getterIpc(){\n    return this.Ipc;\n  }\n  setterIpc(obj:any){\n    this.Ipc=obj\n  }\n  getipc() {\n    return this.http.get<any[]>(\"app/ipclist\");\n  }\n\n  getIpcById(ipc: any) {\n    return this.http.get<any[]>(\"app/ipclist/\" + ipc);\n  }\n\n  SendNGetOtp(emailid:any){\n    return this.http.get(\"app/forgotpassword/\"+emailid);\n  }\n\n  insertUser(User:any){\n    return this.http.post(\"/app/clientlist\",User);\n  }\n\n  getCredclient(cred:any){\n    return this.http.get(\"app/clientbycred/\"+cred)\n  }\n\n  getCredLawyer(cred:any){\n    return this.http.get(\"app/lawyerbycred/\"+cred)\n  }\n\n  getCities(){\n    return this.http.get(\"https://api.openaq.org/v1/cities?country_id=IN\")\n  }\n\n  insertQuestion(Question:any){\n    return this.http.post(\"/app/Questionslist\",Question)\n  }\n  insertAnswer(Answer:any){\n    return this.http.post(\"/app/Answerlist\",Answer)\n  }\n\n\n\n}"],"mappings":";;AAGA,MAGaA,UAAU;EAKrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,YAAY,GAAS,KAAK;IAC1B,KAAAC,cAAc,GAAS,KAAK;EACW;EAGvCC,OAAOA,CAAA;IACL,OAAO,IAAI,CAACC,IAAI;EAClB;EAEAC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACJ,YAAY;EAC1B;EACAK,eAAeA,CAAA;IACb,IAAI,CAACL,YAAY,GAAC,IAAI;EACxB;EAEAM,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACL,cAAc;EAC5B;EAEAM,iBAAiBA,CAAA;IACf,IAAI,CAACN,cAAc,GAAC,IAAI;EAC1B;EAEAO,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACC,GAAG;EACjB;EAEAC,MAAMA,CAACD,GAAO;IACZ,IAAI,CAACA,GAAG,GAACA,GAAG;EACd;EAEAE,SAASA,CAAA;IACP,OAAO,IAAI,CAACC,GAAG;EACjB;EACAC,SAASA,CAACC,GAAO;IACf,IAAI,CAACF,GAAG,GAACE,GAAG;EACd;EACAC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAAChB,IAAI,CAACiB,GAAG,CAAQ,aAAa,CAAC;EAC5C;EAEAC,UAAUA,CAACC,GAAQ;IACjB,OAAO,IAAI,CAACnB,IAAI,CAACiB,GAAG,CAAQ,cAAc,GAAGE,GAAG,CAAC;EACnD;EAEAC,WAAWA,CAACC,OAAW;IACrB,OAAO,IAAI,CAACrB,IAAI,CAACiB,GAAG,CAAC,qBAAqB,GAACI,OAAO,CAAC;EACrD;EAEAC,UAAUA,CAACC,IAAQ;IACjB,OAAO,IAAI,CAACvB,IAAI,CAACwB,IAAI,CAAC,iBAAiB,EAACD,IAAI,CAAC;EAC/C;EAEAE,aAAaA,CAACC,IAAQ;IACpB,OAAO,IAAI,CAAC1B,IAAI,CAACiB,GAAG,CAAC,mBAAmB,GAACS,IAAI,CAAC;EAChD;EAEAC,aAAaA,CAACD,IAAQ;IACpB,OAAO,IAAI,CAAC1B,IAAI,CAACiB,GAAG,CAAC,mBAAmB,GAACS,IAAI,CAAC;EAChD;EAEAE,SAASA,CAAA;IACP,OAAO,IAAI,CAAC5B,IAAI,CAACiB,GAAG,CAAC,gDAAgD,CAAC;EACxE;EAEAY,cAAcA,CAACC,QAAY;IACzB,OAAO,IAAI,CAAC9B,IAAI,CAACwB,IAAI,CAAC,oBAAoB,EAACM,QAAQ,CAAC;EACtD;EACAC,YAAYA,CAACC,MAAU;IACrB,OAAO,IAAI,CAAChC,IAAI,CAACwB,IAAI,CAAC,iBAAiB,EAACQ,MAAM,CAAC;EACjD;;AA1EWlC,UAAU,C;mBAAVA,UAAU,EAAAmC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAVtC,UAAU,C;SAAVA,UAAU;EAAAuC,OAAA,EAAVvC,UAAU,CAAAwC,IAAA;EAAAC,UAAA,EAFT;AAAM;SAEPzC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}