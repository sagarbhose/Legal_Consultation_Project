{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AskQuestionComponent = class AskQuestionComponent {\n  constructor(http) {\n    this.http = http;\n    this.formData = {\n      cities: ''\n    };\n    this.cities = [];\n  }\n  ngOnInit() {\n    throw new Error('Method not implemented.');\n  }\n  submitForm(reg) {\n    this.fetchCities();\n  }\n  fetchCities() {\n    const apiUrl = 'https://api.openaq.org/v1/cities?country_id=IN';\n    this.http.get(apiUrl).subscribe(response => {\n      this.cities = response.results.map(result => {\n        return {\n          name: result.city\n        };\n      });\n    });\n  }\n};\nAskQuestionComponent = __decorate([Component({\n  selector: 'app-ask-question',\n  templateUrl: './ask-question.component.html',\n  styleUrls: ['./ask-question.component.css']\n})], AskQuestionComponent);\nexport { AskQuestionComponent };","map":{"version":3,"names":["Component","AskQuestionComponent","constructor","http","formData","cities","ngOnInit","Error","submitForm","reg","fetchCities","apiUrl","get","subscribe","response","results","map","result","name","city","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\SAGAR\\VSCodes\\Legal_Consulation_Angular\\Legal_Consulation_Angular\\src\\app\\ask-question\\ask-question.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { IpcService } from '../ipc.service';\nimport { HttpClient } from '@angular/common/http';\n\ninterface FormData {\n  cities: string;\n}\n\n@Component({\n  selector: 'app-ask-question',\n  templateUrl: './ask-question.component.html',\n  styleUrls: ['./ask-question.component.css']\n})\nexport class AskQuestionComponent implements OnInit {\n  formData: FormData = {\n    cities: ''\n  };\n\n  cities: any[] = [];\n\n  constructor(private http: HttpClient) {\n    \n  }\n  ngOnInit(): void {\n    throw new Error('Method not implemented.');\n  }\n\n  submitForm(reg:any)\n{\n  this.fetchCities();\n}\n\n\n  fetchCities() {\n    const apiUrl = 'https://api.openaq.org/v1/cities?country_id=IN';\n    this.http.get(apiUrl).subscribe((response: any) => {\n      this.cities = response.results.map((result: any) => {\n        return { name: result.city };\n      });\n    });\n  }\n\n}"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAajD,IAAaC,oBAAoB,GAAjC,MAAaA,oBAAoB;EAO/BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IANxB,KAAAC,QAAQ,GAAa;MACnBC,MAAM,EAAE;KACT;IAED,KAAAA,MAAM,GAAU,EAAE;EAIlB;EACAC,QAAQA,CAAA;IACN,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAEAC,UAAUA,CAACC,GAAO;IAElB,IAAI,CAACC,WAAW,EAAE;EACpB;EAGEA,WAAWA,CAAA;IACT,MAAMC,MAAM,GAAG,gDAAgD;IAC/D,IAAI,CAACR,IAAI,CAACS,GAAG,CAACD,MAAM,CAAC,CAACE,SAAS,CAAEC,QAAa,IAAI;MAChD,IAAI,CAACT,MAAM,GAAGS,QAAQ,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAW,IAAI;QACjD,OAAO;UAAEC,IAAI,EAAED,MAAM,CAACE;QAAI,CAAE;MAC9B,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;CAED;AA7BYlB,oBAAoB,GAAAmB,UAAA,EALhCpB,SAAS,CAAC;EACTqB,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWtB,oBAAoB,CA6BhC;SA7BYA,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}