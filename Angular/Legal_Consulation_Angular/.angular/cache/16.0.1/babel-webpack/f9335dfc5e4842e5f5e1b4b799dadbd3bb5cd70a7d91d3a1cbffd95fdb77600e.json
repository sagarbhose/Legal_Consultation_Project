{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass IpcService {\n  constructor(http) {\n    this.http = http;\n  }\n  getipc() {\n    return this.http.get(\"ipc/List\");\n  }\n  getIpcById(ipc) {\n    return this.http.get(\"ipc/List/\" + ipc);\n  }\n}\nIpcService.ɵfac = function IpcService_Factory(t) {\n  return new (t || IpcService)(i0.ɵɵinject(i1.HttpClient));\n};\nIpcService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: IpcService,\n  factory: IpcService.ɵfac,\n  providedIn: 'root'\n});\nexport { IpcService };","map":{"version":3,"names":["IpcService","constructor","http","getipc","get","getIpcById","ipc","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\SAGAR\\VSCodes\\Legal_Consulation_Angular\\Legal_Consulation_Angular\\src\\app\\ipc.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IpcService {\n\n  constructor(private  http:HttpClient) {\n\n   }\n   getipc(){\n    return this.http.get(\"ipc/List\")\n   }\n\n   getIpcById(ipc: any) {\n    return this.http.get(\"ipc/List/\"+ ipc);\n  }\n}\n"],"mappings":";;AAGA,MAGaA,UAAU;EAErBC,YAAqBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;EAExB;EACAC,MAAMA,CAAA;IACL,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,UAAU,CAAC;EACjC;EAEAC,UAAUA,CAACC,GAAQ;IAClB,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAC,WAAW,GAAEE,GAAG,CAAC;EACxC;;AAXWN,UAAU,C;mBAAVA,UAAU,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAVV,UAAU,C;SAAVA,UAAU;EAAAW,OAAA,EAAVX,UAAU,CAAAY,IAAA;EAAAC,UAAA,EAFT;AAAM;SAEPb,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}